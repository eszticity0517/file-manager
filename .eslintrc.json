{
    "root": true,
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
      "project": "tsconfig.json"
    },
    "plugins": [
      "@typescript-eslint"
    ],
    "extends": [
      "eslint:recommended",
      "plugin:@typescript-eslint/eslint-recommended",
      "plugin:@typescript-eslint/recommended"
    ],
    "rules": {
      "array-callback-return": "warn",
      "arrow-body-style": "warn",
      "arrow-spacing": "warn",
      "block-spacing": "warn",
      "brace-style": ["warn", "allman", { "allowSingleLine": true }],
      "camelcase": "off",
      "class-methods-use-this": "off",
      "comma-dangle": "warn",
      "complexity": ["warn", 100],
      "consistent-return": "error",
      "dot-notation": "warn",
      "eol-last": ["warn", "always"],
      "eqeqeq": ["warn", "always"],
      "func-names": "off",
      "implicit-arrow-linebreak": "warn",
      "jsx-a11y/click-events-have-key-events": "off",
      "jsx-a11y/interactive-supports-focus": "off",
      "jsx-a11y/no-static-element-interactions": "off",
      "jsx-quotes": "warn",
      "key-spacing": "warn",
      "keyword-spacing": "warn",
      "lines-between-class-members": "off",
      "max-len": ["warn", {
          "code": 180
      }],
      "new-cap": "off",
      "new-parens": "warn",
      "newline-per-chained-call": "off",
      "no-alert": "warn",
      "no-async-promise-executor": "warn",
      "no-caller": "warn",
      "no-case-declarations": "warn",
      "no-compare-neg-zero": "warn",
      "no-cond-assign": "warn",
      "no-confusing-arrow": "off",
      "no-console": "off",
      "no-constant-condition": "warn",
      "no-continue": "off",
      "no-control-regex": "warn",
      "no-debugger": "warn",
      "no-delete-var": "warn",
      "no-else-return": "off",
      "no-extra-semi": "warn",
      "no-empty": "warn",
      "no-empty-character-class": "warn",
      "no-empty-function": "off", // Many action types use property-params-only constructors.
      "no-empty-pattern": "warn",
      "no-eval": "warn",
      "no-ex-assign": "warn",
      "no-extend-native": "warn",
      "no-extra-bind": "warn",
      "no-extra-boolean-cast": "warn",
      "no-extra-label": "off",
      "no-func-assign": "warn",
      "no-implied-eval": "warn",
      "no-invalid-regexp": "warn",
      "no-invalid-this": "warn",
      "no-labels": "error",
      "no-lone-blocks": "warn",
      "no-loop-func": "off",
      "no-multi-spaces": "warn",
      "no-multiple-empty-lines": "warn",
      "no-new-wrappers": "warn",
      "no-octal": "warn",
      "no-octal-escape": "warn",
      "no-plusplus": "off",
      "no-proto": "warn",
      "no-regex-spaces": "warn",
      "no-restricted-globals": ["warn", "event", "fdescribe", "fit"],
      "no-restricted-syntax": "off",
      "no-return-assign": "off",
      "no-return-await": "warn",
      "no-script-url": "warn",
      "no-self-assign": "warn",
      "no-self-compare": "warn",
      "no-sequences": "warn",
      "no-shadow": "warn",
      "no-sparse-arrays": "error",
      "no-template-curly-in-string": "warn",
      "no-throw-literal": "warn",
      "no-trailing-spaces": "warn",
      "no-undef-init": "off",
      "no-underscore-dangle": "off",
      "no-unmodified-loop-condition": "warn",
      "no-unneeded-ternary": "off",
      "no-unreachable": "warn",
      "no-unreachable-loop": "warn",
      "no-unsafe-finally": "warn",
      "no-unused-expressions": "warn",
      "no-useless-call": "warn",
      "no-useless-catch": "warn",
      "no-useless-concat": "warn",
      "no-useless-escape": "warn",
      "no-useless-return": "warn",
      "no-var": "warn",
      "no-whitespace-before-property": "warn",
      "no-with": "warn",
      "object-curly-newline": "off",
      "object-curly-spacing": ["warn", "always"],
      "object-shorthand": ["error", "never"],
      "one-var": ["warn", "never"],
      "linebreak-style": 0, 
      "operator-linebreak": ["warn", "before", {
          "overrides": {
              "&&": "after",
              "||": "after"
          }
      }],
      "padded-blocks": ["warn", "never"],
      "prefer-const": "off",
      "prefer-destructuring": "off",
      "prefer-object-spread": "warn",
      "prefer-promise-reject-errors": "warn",
      "prefer-spread": "off",
      "prefer-template": "off",
      "prefer-rest-params": "warn",
      "quote-props": ["warn", "consistent-as-needed"],
      "quotes": "warn",
      "radix": "warn",
      "require-atomic-updates": "off",
      "require-await": "off", // Sometimes it's useful to use async so that thrown errors are converted to rejected promises.
      "require-yield": "warn",
      "rest-spread-spacing": "warn",
      "semi": ["warn", "always"],
      "space-before-blocks": "warn",
      "space-before-function-paren": "off",
      "space-in-parens": "warn",
      "space-infix-ops": "warn",
      "spaced-comment": "warn",
      "switch-colon-spacing": "warn",
      "template-curly-spacing": "warn",
      "use-isnan": "warn",
      "wrap-regex": "warn",
      "yoda": "warn",
      "for-direction": "warn",
      "no-duplicate-case": "warn",
      "no-dupe-else-if": "warn",
      "@typescript-eslint/array-type": ["off", "array-simple"], // TODO: this triggers for ReadonlyArray<T> unintentionally; re-enabled when fixed.
      "@typescript-eslint/await-thenable": "off", // TODO: this triggers for every electron method with a false positive
      "@typescript-eslint/ban-types": "off",
      "@typescript-eslint/indent": "warn",
      "@typescript-eslint/no-inferrable-types": "off",
      "@typescript-eslint/no-this-alias": "warn",
      "@typescript-eslint/naming-convention": [
          "warn",
          {
              "selector": "default",
              "format": ["camelCase"]
          },
          {
              "selector": "variable",
              "format": ["camelCase", "UPPER_CASE", "PascalCase"],
              "leadingUnderscore": "allow"
          },
          {
              "selector": "function",
              "format": ["camelCase", "PascalCase"],
              "leadingUnderscore": "allow"
          },
          {
              "selector": "parameter",
              "format": ["camelCase"],
              "leadingUnderscore": "allow"
          },
          {
              "selector": "memberLike",
              "format": ["camelCase", "PascalCase"],
              "leadingUnderscore": "allow"
          },
          {
              "selector": "memberLike",
              "modifiers": ["private"],
              "format": ["camelCase"],
              "leadingUnderscore": "require"
          },
          {
              "selector": "objectLiteralProperty",
              "format": ["camelCase", "PascalCase", "snake_case"]
          },
          {
              "selector": "typeLike",
              "format": ["camelCase", "PascalCase"]
          }
      ],
      "@typescript-eslint/explicit-function-return-type": "off",
      "@typescript-eslint/explicit-member-accessibility": ["warn", {
          "accessibility": "explicit",
          "overrides": {
              "constructors": "off"
          }
      }],
      "@typescript-eslint/member-delimiter-style": ["warn", {
          "multiline": {
              "delimiter": "semi",
              "requireLast": true
          },
          "singleline": {
              "delimiter": "comma",
              "requireLast": false
          }
      }],
      "@typescript-eslint/no-empty-function": "off",
      "@typescript-eslint/no-loss-of-precision": "warn",
      "@typescript-eslint/consistent-type-assertions": ["warn"],
      "@typescript-eslint/no-non-null-asserted-nullish-coalescing": "warn",
      "@typescript-eslint/no-non-null-assertion": "error",
      "@typescript-eslint/no-array-constructor": "warn",
      "@typescript-eslint/no-empty-interface": "off",
      "@typescript-eslint/no-explicit-any": "off",
      "@typescript-eslint/no-extraneous-class": "off", // Empty classes are often used as actions.
      "@typescript-eslint/no-for-in-array": "warn",
      "@typescript-eslint/no-misused-new": "warn",
      "@typescript-eslint/no-namespace": "warn",
      "@typescript-eslint/no-object-literal-type-assertion": "off",
      "@typescript-eslint/no-parameter-properties": "off",
      "@typescript-eslint/no-require-imports": "warn",
      "@typescript-eslint/triple-slash-reference": ["warn", { "path": "never", "types": "never", "lib": "never" }],
      "@typescript-eslint/no-unused-vars": "off",
      "@typescript-eslint/no-use-before-define": "off",
      "@typescript-eslint/no-useless-constructor": "warn",
      "@typescript-eslint/prefer-includes": "warn",
      "@typescript-eslint/consistent-type-definitions": ["warn", "interface"],
      "@typescript-eslint/prefer-string-starts-ends-with": "warn",
      "@typescript-eslint/restrict-plus-operands": "off",
      "@typescript-eslint/type-annotation-spacing": "warn",
      "@typescript-eslint/no-shadow": ["warn"]
    }
  }